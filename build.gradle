buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:4.4.0'
    }
}

apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'nebula.ospackage'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
	//compile files('lib/thrust-core.jar')
	compile 'org.apache.directory.studio:org.apache.commons.io:2.4'
	
	
	testCompileOnly(
		'org.apiguardian:apiguardian-api:1.0.0'
	)
	testCompile(
            'org.junit.jupiter:junit-jupiter-api:5.0.1'
    )
    testRuntime(
            'org.junit.jupiter:junit-jupiter-engine:5.0.1',
            'org.junit.vintage:junit-vintage-engine:4.12.1',
            'org.junit.platform:junit-platform-launcher:1.0.1',
            'org.junit.platform:junit-platform-runner:1.0.1'
    )
}

jar {
  manifest {
    attributes 'Main-Class': 'br.com.softbox.thrust.main.Main'
  }

  destinationDir new File("$rootDir/dist")

  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

ospackage {
    version = '0.4.3'
    release = '1'
    os = LINUX
    user = 'root'

    postInstall file('src/main/resources/scripts/postInstall.sh')

    into '/opt/thrust'

    from(jar.outputs.files) {
        into 'lib'
    }
    from('src/main/resources/scripts') {
    	into 'bin'
        fileMode = 0755
    }

    link('/usr/local/bin/thrust', '/opt/thrust/bin/thrust.sh')
}

build.finalizedBy buildRpm
build.finalizedBy buildDeb